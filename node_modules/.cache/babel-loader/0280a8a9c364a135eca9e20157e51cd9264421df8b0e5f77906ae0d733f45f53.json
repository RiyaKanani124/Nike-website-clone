{"ast":null,"code":"var _jsxFileName = \"D:\\\\awt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, useParams } from 'react-router-dom'; // Import useParams\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user/:userId\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst User = () => {\n  _s();\n  let {\n    userId\n  } = useParams(); // Access useParams here\n\n  // Fetch user data based on userId, or use it as needed\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"r0rqsLfWJTH7w5cXk9h+Af0W8oI=\", false, function () {\n  return [useParams];\n});\n_c2 = User;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"User\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","useParams","Home","About","Contact","Navbar","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","User","_c","_s","userId","_c2","$RefreshReg$"],"sources":["D:/awt/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useParams } from 'react-router-dom'; // Import useParams\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/contact\" element={<Contact />} />\r\n        <Route path=\"/user/:userId\" element={<User />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst User = () => {\r\n  let { userId } = useParams(); // Access useParams here\r\n  \r\n  // Fetch user data based on userId, or use it as needed\r\n  return (\r\n    <div>\r\n      <h2>User ID: {userId}</h2>\r\n      {/* Render user-specific content here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AACtF,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA,CAACF,MAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVN,OAAA,CAACR,MAAM;MAAAU,QAAA,gBACLF,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,GAAG;QAACC,OAAO,eAAER,OAAA,CAACL,IAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAER,OAAA,CAACJ,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,UAAU;QAACC,OAAO,eAAER,OAAA,CAACH,OAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CN,OAAA,CAACP,KAAK;QAACc,IAAI,EAAC,eAAe;QAACC,OAAO,eAAER,OAAA,CAACS,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GAZQT,GAAG;AAcZ,MAAMQ,IAAI,GAAGA,CAAA,KAAM;EAAAE,EAAA;EACjB,IAAI;IAAEC;EAAO,CAAC,GAAGlB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,oBACEM,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,GAAI,WAAS,EAACU,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEV,CAAC;AAACK,EAAA,CAVIF,IAAI;EAAA,QACSf,SAAS;AAAA;AAAAmB,GAAA,GADtBJ,IAAI;AAYV,eAAeR,GAAG;AAAC,IAAAS,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\awt\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create a new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// CartProvider component to wrap your application with\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n\n  // Function to add an item to the cart\n  const addToCart = item => {\n    setCart([...cart, item]);\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = index => {\n    const newCart = [...cart];\n    newCart.splice(index, 1);\n    setCart(newCart);\n  };\n\n  // Function to clear the cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Provide the cart context to children components\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","addToCart","item","removeFromCart","index","newCart","splice","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/awt/src/components/CartContext.js"],"sourcesContent":["// CartContext.js\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create a new context\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use the cart context\r\nexport const useCart = () => useContext(CartContext);\r\n\r\n// CartProvider component to wrap your application with\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Function to add an item to the cart\r\n  const addToCart = (item) => {\r\n    setCart([...cart, item]);\r\n  };\r\n\r\n  // Function to remove an item from the cart\r\n  const removeFromCart = (index) => {\r\n    const newCart = [...cart];\r\n    newCart.splice(index, 1);\r\n    setCart(newCart);\r\n  };\r\n\r\n  // Function to clear the cart\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  // Provide the cart context to children components\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMY,SAAS,GAAIC,IAAI,IAAK;IAC1BF,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEG,IAAI,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,OAAO,GAAG,CAAC,GAAGN,IAAI,CAAC;IACzBM,OAAO,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IACxBJ,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBP,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA,oBACER,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEV,IAAI;MAAEE,SAAS;MAAEE,cAAc;MAAEI;IAAU,CAAE;IAAAV,QAAA,EACzEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,GAAA,CA1BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}